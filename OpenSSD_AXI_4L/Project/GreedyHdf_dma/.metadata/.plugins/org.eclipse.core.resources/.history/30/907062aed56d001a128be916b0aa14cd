/*
 * dma_operation.c

 *
 *  Created on: Mar 24, 2020
 *      Author: giuseppezynq
 */
#include "xaxidma.h"
#include "memory_map.h"

void V2FReadPageTransfer(XAxiDma *DMAInstance,int way, void* pageDataBuffer, void* spareDataBuffer, unsigned int* errorInformation, unsigned int* completion, unsigned int rowAddress)
{
	int transfer,busy;
	//data buffer
	Xil_DCacheFlushRange((UINTPTR) Data_TxBufferPtr, BYTES_PER_DATA_REGION_OF_NAND_ROW);
	#ifdef __aarch64__
		Xil_DCacheFlushRange((UINTPTR) Data_RxBufferPtr, BYTES_PER_DATA_REGION_OF_NAND_ROW);
	#endif

	transfer = XAxiDma_SimpleTransfer(&DMAInstance,(UINTPTR) Data_RxBufferPtr, BYTES_PER_DATA_REGION_OF_NAND_ROW, (int) XAXIDMA_DEVICE_TO_DMA);
	if (transfer != XST_SUCCESS)
	{
		xil_printf("transfer1 forward = %d \r\n",transfer);
	}
	transfer = XAxiDma_SimpleTransfer(&DMAInstance,(UINTPTR) Data_TxBufferPtr, BYTES_PER_DATA_REGION_OF_NAND_ROW, (int) XAXIDMA_DMA_TO_DEVICE);
	if (transfer != XST_SUCCESS)
	{
		xil_printf("transfer1 back = %d \r\n",transfer);
	}
	while ((XAxiDma_Busy(&DMAInstance,XAXIDMA_DEVICE_TO_DMA)) || (XAxiDma_Busy(&DMAInstance,XAXIDMA_DMA_TO_DEVICE)))
	{
		/* Wait */
		xil_printf("busy transfer1 \r\n");
	}
	/* Invalidate the DestBuffer before receiving the data, in case the Data Cache is enabled */
	#ifndef __aarch64__
		Xil_DCacheInvalidateRange((UINTPTR)Data_RxBufferPtr, BYTES_PER_DATA_REGION_OF_NAND_ROW);
	#endif

	///////////////////////////////////////////////////////////////////////////////////////////////
	//spare buffer
	Xil_DCacheFlushRange((UINTPTR) Spare_TxBufferPtr, BYTES_PER_SPARE_REGION_OF_PAGE);
	#ifdef __aarch64__
		Xil_DCacheFlushRange((UINTPTR) Spare_RxBufferPtr, BYTES_PER_SPARE_REGION_OF_PAGE);
	#endif

	transfer = XAxiDma_SimpleTransfer(&DMAInstance,(UINTPTR) Spare_RxBufferPtr, BYTES_PER_SPARE_REGION_OF_PAGE, (int) XAXIDMA_DEVICE_TO_DMA);
	if (transfer != XST_SUCCESS)
	{
		xil_printf("transfer2 forward = %d \r\n",transfer);
	}
	transfer = XAxiDma_SimpleTransfer(&DMAInstance,(UINTPTR) Spare_TxBufferPtr, BYTES_PER_SPARE_REGION_OF_PAGE, (int) XAXIDMA_DMA_TO_DEVICE);
	if (transfer != XST_SUCCESS)
	{
		xil_printf("transfer2 back = %d \r\n",transfer);
	}
	while ((XAxiDma_Busy(&DMAInstance,XAXIDMA_DEVICE_TO_DMA)) || (XAxiDma_Busy(&DMAInstance,XAXIDMA_DMA_TO_DEVICE)))
	{
		/* Wait */
		xil_printf("busy transfer2 \r\n");
	}

	#ifndef __aarch64__
		Xil_DCacheInvalidateRange((UINTPTR)Spare_RxBufferPtr, BYTES_PER_SPARE_REGION_OF_PAGE);
	#endif
	//////////////////////////////////////////////////////////////////////////
	*completion = 0x1;
	*errorInfo = 0x11000000;
	*(errorInfo +1) = 0xFFFFFFFF;
}
